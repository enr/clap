
buildscript {
   repositories {
      jcenter()
      mavenCentral()
      maven { url "https://oss.sonatype.org/content/groups/public"}
   }
   dependencies {
      classpath 'com.github.townsfolk:gradle-release:1.2'
      classpath 'com.github.ben-manes:gradle-versions-plugin:0.4'
      classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.2'
      classpath 'org.asciidoctor:asciidoctorj:1.5.2'
      classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.7'
      classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.4'
   }
}
plugins {
  id 'org.asciidoctor.convert' version '1.5.2'
}

apply plugin: 'release'
createReleaseTag.dependsOn ':modules:core:publish'

def projProp = { String key ->
    if(project.hasProperty(key)) return project[key]
    return null
}

ext {
    groovyVersion = '2.4.5'
    javaModules = [
        ':modules:core',
        ':modules:uat'
    ]
    uploadableModules = [
        ':modules:core'
    ]
    uatModules = [
        ':modules:uat'
    ]
}

allprojects { project ->
    group = 'com.atoito.clap'

    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/repositories/releases/'
        }
    }
}

subprojects {

    if (project.path in javaModules) {
        apply plugin: 'groovy'
        apply plugin: 'maven-publish'
        apply plugin: 'jacoco'
        apply plugin: 'versions'

        configurations {
            compile.transitive = true
            testCompile.transitive = true
        }

        dependencies {
            compile "org.codehaus.groovy:groovy:$groovyVersion",
                    'com.google.inject:guice:4.0'
        }

        sourceCompatibility = 1.8
        targetCompatibility = 1.8

        jar {
            manifest {
                attributes( "Implementation-Title": "Clap",
                            "Implementation-Version": version,
                            "Project":project.name)
            }
        }

        task coverage << {}
        coverage.dependsOn test

    }

    if (project.path in uploadableModules) {

        task sourceJar(type: Jar) {
            from sourceSets.main.allSource
        }

        task javadocJar(type: Jar, dependsOn: 'javadoc') {
            from javadoc.destinationDir
        }

        publishing {
            publications {
                coreModule(MavenPublication) {
                    from components.java
                    artifact sourceJar {
                        classifier "sources"
                    }
                    artifact javadocJar {
                        classifier "javadoc"
                    }
                    pom.withXml {
                        def root = asNode()
                        root.appendNode('name', 'Clap')
                        root.appendNode('description', 'Library to easily create command-line apps')
                        root.appendNode('inceptionYear', '2013')
                        def license = root.appendNode('licenses').appendNode('license')
                        license.appendNode('name', 'The Apache Software License, Version 2.0')
                        license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                        license.appendNode('distribution', 'repo')
                        def developer = root.appendNode('developers').appendNode('developer')
                        developer.appendNode('id', 'enr')
                        developer.appendNode('name', 'Enrico Comiti')
                        developer.appendNode('email', 'enrico@comiti.name')
                    }
                }
            }
            repositories {
                maven {
                    url 'https://api.bintray.com/maven/enrico/maven/clap'
                    credentials {
                        username = projProp("bintray.username")
                        password = projProp("bintray.apikey")
                    }
                }
            }
        }

        publish.dependsOn assemble
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
